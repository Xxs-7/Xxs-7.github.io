{"pageProps":{"toc":[{"text":"更新渲染","hash":"#更新渲染","depth":1},{"text":"类组件","hash":"#类组件","depth":2},{"text":"函数组件","hash":"#函数组件","depth":2}],"code":"var Component=(()=>{var p=Object.create;var l=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var m=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports),k=(a,e)=>{for(var t in e)l(a,t,{get:e[t],enumerable:!0})},d=(a,e,t,r)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let c of h(e))!f.call(a,c)&&c!==t&&l(a,c,{get:()=>e[c],enumerable:!(r=u(e,c))||r.enumerable});return a};var g=(a,e,t)=>(t=a!=null?p(b(a)):{},d(e||!a||!a.__esModule?l(t,\"default\",{value:a,enumerable:!0}):t,a)),U=a=>d(l({},\"__esModule\",{value:!0}),a);var o=m((v,i)=>{i.exports=_jsx_runtime});var q={};k(q,{default:()=>j});var n=g(o());function s(a){let e=Object.assign({h1:\"h1\",p:\"p\",code:\"code\",h2:\"h2\",pre:\"pre\"},a.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{hash:\"\\u66F4\\u65B0\\u6E32\\u67D3\",children:\"\\u66F4\\u65B0\\u6E32\\u67D3\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u6307\\u901A\\u8FC7 \",(0,n.jsx)(e.code,{children:\"setState\"}),\"\\uFF0C\",(0,n.jsx)(e.code,{children:\"forceUpdate\"}),\" \\u7B49 API \\u5F15\\u8D77\\u7684\\u7EC4\\u4EF6\\u66F4\\u65B0\\u6E32\\u67D3\\u3002\\u7ED3\\u679C\\u540C\\u521D\\u6B21\\u6E32\\u67D3\\u4E00\\u6837\\uFF0C\\u901A\\u8FC7 \",(0,n.jsx)(e.code,{children:\"scheduleUpdateOnFiber\"}),\" \\u53BB\\u8BA9 scheduler \\u53BB\\u5904\\u7406\\u6E32\\u67D3\\u4EFB\\u52A1\\u3002\"]}),`\n`,(0,n.jsx)(e.h2,{hash:\"\\u7C7B\\u7EC4\\u4EF6\",children:\"\\u7C7B\\u7EC4\\u4EF6\"}),`\n`,(0,n.jsx)(e.p,{children:\"\\u6838\\u5FC3\\u4EE3\\u7801\\u5982\\u4E0B\\uFF0C\\u603B\\u5171\\u4E00\\u4E2A\\u53D8\\u91CF\\u4E09\\u4E2A\\u51FD\\u6570\\uFF1A\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`// react/packages/react-reconciler/src/ReactFiberClassComponent.old.js\nconst classComponentUpdater = {\n  isMounted,\n\t// setState \\u8D70\\u8FD9\\u91CC\n  enqueueSetState(inst, payload, callback) {\n    \\xB7\\xB7\\xB7\n  },\n\t// \\u6CA1\\u6709\\u66B4\\u9732\\u7684 api\\uFF0C\\u76EE\\u524D\\u4EC5\\u5728\\u6E90\\u7801\\u4E2D\\u4E00\\u4E9B\\u8001\\u58F0\\u660E\\u5468\\u671F\\u51FD\\u6570\\u4E2D\\u4F1A\\u88AB\\u7528\\u5230\n  enqueueReplaceState(inst, payload, callback) {\n    \\xB7\\xB7\\xB7\n  },\n\t// forceUpdate \\u8D70\\u8FD9\\u91CC\n  enqueueForceUpdate(inst, callback) {\n    \\xB7\\xB7\\xB7\n  },\n};\n`})}),`\n`,(0,n.jsx)(e.p,{children:\"\\u5B50\\u51FD\\u6570\\uFF1A\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`enqueueSetState(inst, payload, callback) {\n    const fiber = getInstance(inst);\n    const eventTime = requestEventTime();\n    const lane = requestUpdateLane(fiber);\n\n    const update = createUpdate(eventTime, lane);\n    update.payload = payload;\n    if (callback !== undefined && callback !== null) {\n      if (__DEV__) {\n        warnOnInvalidCallback(callback, 'setState');\n      }\n      update.callback = callback;\n    }\n\n    const root = enqueueUpdate(fiber, update, lane);\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n      entangleTransitions(root, fiber, lane);\n    }\n\n    \\xB7\\xB7\\xB7\n},\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:\"getInstance\"}),\" \\uFF1A\\u83B7\\u53D6\\u7EC4\\u4EF6\\u7684 fiber\\uFF1B\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u5176\\u4ED6\\u903B\\u8F91\\u548C\\u9996\\u6B21\\u66F4\\u65B0 \",(0,n.jsx)(e.code,{children:\"updateContainer\"}),\" \\u7684\\u903B\\u8F91\\u5DEE\\u4E0D\\u591A\\uFF0C\\u521B\\u5EFA \",(0,n.jsx)(e.code,{children:\"update\"}),\"\\uFF0C\\u5165\\u961F\\uFF0C\\u8BA9 \",(0,n.jsx)(e.code,{children:\"scheduler\"}),\" \\u8C03\\u5EA6\\u6267\\u884C\\u3002\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`enqueueForceUpdate(inst, callback) {\n    const fiber = getInstance(inst);\n    const eventTime = requestEventTime();\n    const lane = requestUpdateLane(fiber);\n\n    const update = createUpdate(eventTime, lane);\n\t\t// \\u6807\\u5FD7\\u5F3A\\u5236\\u66F4\\u65B0\n    update.tag = ForceUpdate;\n\n    if (callback !== undefined && callback !== null) {\n      if (__DEV__) {\n        warnOnInvalidCallback(callback, 'forceUpdate');\n      }\n      update.callback = callback;\n    }\n\n    const root = enqueueUpdate(fiber, update, lane);\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n      entangleTransitions(root, fiber, lane);\n    }\n\n    \\xB7\\xB7\\xB7\n  },\n`})}),`\n`,(0,n.jsx)(e.h2,{hash:\"\\u51FD\\u6570\\u7EC4\\u4EF6\",children:\"\\u51FD\\u6570\\u7EC4\\u4EF6\"}),`\n`,(0,n.jsx)(e.p,{children:\"todo\"})]})}function _(a={}){let{wrapper:e}=a.components||{};return e?(0,n.jsx)(e,Object.assign({},a,{children:(0,n.jsx)(s,a)})):s(a)}var j=_;return U(q);})();\n;return Component;"},"__N_SSG":true}